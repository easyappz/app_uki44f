openapi: 3.0.0
info:
  title: Photo Rating API
  version: 1.0.0
paths:
  /api/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - gender
                - age
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                gender:
                  type: string
                  enum: [male, female, other]
                age:
                  type: integer
                  minimum: 18
                  maximum: 100
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Bad request
        '500':
          description: Server error
  /api/login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Bad request
        '500':
          description: Server error
  /api/upload-photo:
    post:
      summary: Upload a new photo
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                url:
                  type: string
      responses:
        '201':
          description: Photo uploaded successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '500':
          description: Server error
  /api/photos-to-rate:
    get:
      summary: Get photos to rate
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of photos to rate
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Photo'
        '401':
          description: Unauthorized
        '500':
          description: Server error
  /api/rate-photo:
    post:
      summary: Rate a photo
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - photoId
                - rating
              properties:
                photoId:
                  type: string
                rating:
                  type: string
                  enum: [like, dislike]
      responses:
        '200':
          description: Photo rated successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Photo not found
        '500':
          description: Server error
  /api/user-photos:
    get:
      summary: Get user's photos
      security:
        - BearerAuth: []
      responses:
        '200':
          description: List of user's photos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Photo'
        '401':
          description: Unauthorized
        '500':
          description: Server error
  /api/delete-photo/{photoId}:
    delete:
      summary: Delete a user's photo
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: photoId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Photo deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Photo not found or not owned by user
        '500':
          description: Server error
components:
  schemas:
    Photo:
      type: object
      properties:
        _id:
          type: string
        userId:
          type: string
        url:
          type: string
        likes:
          type: integer
        dislikes:
          type: integer
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT